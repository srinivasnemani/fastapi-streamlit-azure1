name: Frontend CI/CD - Test, Build, and Push Docker Image

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'frontend/src/**'
  push:
    branches: [ main ]
    paths:
      - 'frontend/src/**'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      statuses: write
      pull-requests: write

    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.head_ref }}
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Install pip
      run: |
        python -m pip install --upgrade pip
    - name: Install dependencies
      run: |
        pip install -r frontend/requirements.txt
    - name: Run tests
      run: |
        cd frontend
        python -m pytest tests/ --maxfail=1 --disable-warnings --tb=short
    - name: Create test status
      if: success()
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.repos.createCommitStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            sha: context.sha,
            state: 'success',
            description: 'âœ… All frontend tests passed!',
            context: 'pytest-frontend'
          })

  build-docker-image-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: success() && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN_202507_01 }}
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/fastapi-streamlit-frontend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
    - name: Debug Docker image
      if: success()
      run: |
        echo "âœ… Frontend Docker image built and pushed successfully!"
        echo "Event type: ${{ github.event_name }}"
        echo "Build completed successfully! ðŸ˜Š" 

  deploy-to-azure:
    needs: build-docker-image-and-push
    runs-on: ubuntu-latest
    if: success() && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
    permissions:
      contents: read
      id-token: write

    steps:
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS_STREAMLIT }}

    - name: Update container image
      run: |
        az webapp config container set \
          --name ${{ secrets.AZURE_APP_NAME_STREAMLIT }} \
          --resource-group ${{ secrets.AZURE_RESOURCE_GROUP_STREAMLIT }} \
          --container-image-name ${{ secrets.DOCKERHUB_USERNAME }}/fastapi-streamlit-frontend:latest

    - name: Restart app
      run: |
        az webapp restart \
          --name ${{ secrets.AZURE_APP_NAME_STREAMLIT }} \
          --resource-group ${{ secrets.AZURE_RESOURCE_GROUP_STREAMLIT }} 